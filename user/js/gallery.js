!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";n.r(t);class r{constructor(){this.BODY=document.body}generateWithClassName(e,...t){let n=document.createElement("div");n.className=e;for(let e of this.getMarkup(t))void 0!==e&&n.appendChild(e);return n}getMarkup(e){let t=!0,n=this.generateMarkup(e),r=[];for(;t;){let e=n.next();try{t=!e.done,r.push(e.value)}catch(e){}}return r}*generateMarkup(e){for(let t of e){let e=document.createElement(t.el),n=document.createTextNode(t.text?t.text:""),r=t.options?t.options:[];t.text&&e.appendChild(n);for(let t of r)e.setAttribute(t.name,t.value);t.event&&e.addEventListener(t.event,t.callBack),yield e}}}class o{append(e,t){e.appendChild(t),this.beautyShow(t)}remove(e,t){t.classList.add("beforeHide"),setTimeout(()=>{e.removeChild(t)},500)}beautyShow(e){setTimeout(()=>{e.classList.remove("beforeShown")},700)}}class a{constructor(){this.hg=new r,this.appender=new o}createWindowWithImg(e){let t={el:"img",options:[{name:"class",value:e.className},{name:"src",value:e.src}]},n={el:"span",text:"X",event:"click",callBack:()=>this.appender.remove(this.hg.BODY,document.getElementsByClassName("detailyWindow")[0])},r=this.hg.generateWithClassName("detailyWindow beforeShown",n,t);this.appender.append(this.hg.BODY,r)}}let s=document.getElementsByClassName("details");const i=new class{constructor(e){this.mainImg=e,this.mw=new a}changeMain(e){this.isMain(e)?this.mw.createWindowWithImg(e):([this.mainImg.src,e.src]=[e.src,this.mainImg.src],console.log(this.mainImg))}isMain(e){return e.classList.contains("currentImg")}}(document.getElementsByClassName("currentImg")[0]);for(let e of s)e.onclick=(()=>{i.changeMain(e)})}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,